# 定义 Nginx 的 worker 进程用户
user  nginx;
# 通常设置为 CPU 核心数，'auto' 可以自动检测
worker_processes  auto;

# 定义错误日志的位置和级别
error_log  /var/log/nginx/error.log warn;
# 定义主进程的 PID 文件
pid        /var/run/nginx.pid;

# --- 核心修改：添加必需的 events 块 ---
# 这个块是必须的，即使内容为空
events {
    # 每个 worker 进程可以处理的最大连接数
    worker_connections  1024;
}

# 定义 http 上下文
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    client_max_body_size 100M;

    # 定义缓存路径和 key
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=emby_cache:10m max_size=1g inactive=7d;
    proxy_cache_key "$scheme$request_method$host$request_uri";

    # 定义访问日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'CACHE:$upstream_cache_status';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # 我们的 server 配置块
    server {
        listen 8270;
        listen [::]:8270;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        # 图片代理
        location ~ ^/api/(emby-)?image-proxy {
            proxy_cache emby_cache;
            proxy_cache_valid 200 304 24h;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            add_header X-Proxy-Cache $upstream_cache_status;
            
            proxy_pass http://127.0.0.1:8271;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        

        # API 代理
        location /api/ {
            proxy_pass http://127.0.0.1:8271; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket 代理
        location /ws/ {
            proxy_pass http://127.0.0.1:8271/ws/; 
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # 前端路由
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}